Description: Switch back to tty1 on exit if started with vt.handoff
Author: Steve Langasek <steve.langasek@ubuntu.com>
Last-Update: 2012-04-10
Bug-Ubuntu: https://bugs.launchpad.net/bugs/913731
Index: trunk/src/main.c
===================================================================
--- trunk.orig/src/main.c
+++ trunk/src/main.c
@@ -1534,7 +1534,8 @@
   ply_keyboard_t *keyboard;
 
   // urgh
-  if (!ply_terminal_open (state->terminal))
+  if (state->local_console_terminal != NULL &&
+      !ply_terminal_open (state->local_console_terminal))
     return;
 
   keyboard = ply_keyboard_new_for_terminal (terminal);
@@ -2164,6 +2165,21 @@
 
   ply_trace ("After processing serial consoles there are now %d text displays",
              ply_list_get_length (state->text_displays));
+
+  if (state->mode == PLY_MODE_BOOT && state->local_console_terminal)
+    {
+      int vt_handoff = -1;
+      char *arg;
+
+      arg = strstr (state->kernel_command_line, "vt.handoff=");
+      if (arg != NULL)
+        sscanf (arg, "vt.handoff=%d", &vt_handoff);
+      if (vt_handoff > 0)
+        {
+          ply_trace ("bootloader handed off on VT%d.", vt_handoff);
+          ply_terminal_handle_vt_handoff (state->local_console_terminal, vt_handoff);
+        }
+    }
 }
 
 static bool
Index: trunk/src/libply-splash-core/ply-terminal.c
===================================================================
--- trunk.orig/src/libply-splash-core/ply-terminal.c
+++ trunk/src/libply-splash-core/ply-terminal.c
@@ -651,6 +651,14 @@
   return true;
 }
 
+void
+ply_terminal_handle_vt_handoff (ply_terminal_t *terminal, int vt)
+{
+  if (vt == terminal->initial_vt_number)
+    terminal->initial_vt_number = 1;
+}
+
+
 int
 ply_terminal_get_fd (ply_terminal_t *terminal)
 {
Index: trunk/src/libply-splash-core/ply-terminal.h
===================================================================
--- trunk.orig/src/libply-splash-core/ply-terminal.h
+++ trunk/src/libply-splash-core/ply-terminal.h
@@ -60,6 +60,7 @@
 void ply_terminal_free (ply_terminal_t *terminal);
 
 bool ply_terminal_open (ply_terminal_t *terminal);
+void ply_terminal_handle_vt_handoff (ply_terminal_t *, int);
 int ply_terminal_get_fd (ply_terminal_t *terminal);
 bool ply_terminal_is_vt (ply_terminal_t *terminal);
 bool ply_terminal_is_open (ply_terminal_t *terminal);
