From: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.com>
Subject: If we've already freed the plugin, we can't call to it.
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/plymouth/+bug/1794292

Looks like there's some raciness where set_handler_for_input_source() gets
called to after a plugin has already been freed (or was never properly
initialized).

In this case here, we're seeing the following:
SegvAnalysis:
 Segfault happened at: 0x7f5027cb8b09 <ply_renderer_set_handler_for_input_source+89>:	mov    0x78(%rax),%rax
 PC (0x7f5027cb8b09) ok
 source "0x78(%rax)" (0x32785c6174612ddc) not located in a known VMA region (needed readable region)!
 destination "%rax" ok

In other words, renderer is good; but when trying to read at address 0x78 from
renderer->plugin_interface, we reach out of the readable memory.

Make sure renderer->plugin_interface isn't already NULL, that does appear to
fix some of the plymouth crashes evidenced in the Ubuntu plymouth bug:
https://bugs.launchpad.net/ubuntu/+source/plymouth/+bug/1794292

Index: plymouth-0.9.3/src/libply-splash-core/ply-renderer.c
===================================================================
--- plymouth-0.9.3.orig/src/libply-splash-core/ply-renderer.c
+++ plymouth-0.9.3/src/libply-splash-core/ply-renderer.c
@@ -404,6 +404,12 @@ ply_renderer_set_handler_for_input_sourc
         assert (renderer != NULL);
         assert (input_source != NULL);
 
+        ply_trace ("set handler for input source on backend %p (device: %s) (renderer type: %d)",
+                   renderer->backend, renderer->device_name, renderer->type);
+
+        if (!renderer->plugin_interface)
+                return;
+
         renderer->plugin_interface->set_handler_for_input_source (renderer->backend,
                                                                   input_source,
                                                                   handler,
